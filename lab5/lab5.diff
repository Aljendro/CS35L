--- * lib/timespec.h (timespec_cmp): increased width of local variable
      to prevent overflow

diff --git a/lib/timespec.h b/lib/timespec.h
index 9c630b8..9a0b9fb 100644
--- a/lib/timespec.h
+++ b/lib/timespec.h
@@ -40,13 +40,25 @@ struct timespec
 };
 # endif
 
+#define UPPER  1
+#define SAME   0
+#define LOWER -1
+
 /* Return negative, zero, positive if A < B, A == B, A > B, respectively.
    Assume the nanosecond components are in range, or close to it.  */
 static inline int
 timespec_cmp (struct timespec a, struct timespec b)
 {
-  int diff = a.tv_sec - b.tv_sec;
-  return diff ? diff : a.tv_nsec - b.tv_nsec;
+  long long int diff = (long long int) a.tv_sec - (long long int) b.tv_sec;
+  long long int nanoDiff = (long long int) a.tv_nsec - (long long int) b.tv_nsec;
+  /* return diff ? diff : a.tv_nsec - b.tv_nsec; */
+
+  if ( diff > 0 || nanoDiff > 0)
+    return UPPER;
+  else if ( diff == 0 && nanoDiff == 0)
+    return SAME;
+  else
+    return LOWER;
 }
 
 # if ! HAVE_DECL_NANOSLEEP
